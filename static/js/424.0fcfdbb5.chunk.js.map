{"version":3,"file":"static/js/424.0fcfdbb5.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.jsx","components/MoviesSet/MovieSet.jsx","API/getSearchMovies.js","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx"],"sourcesContent":["import { useLocation, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nconst MovieItem = ({ id, src, title, vote }) => {\n  const location = useLocation();\n\n  return (\n    <li key={id} title={title}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={src} alt={title} width=\"200\" />\n        <h1>{title}</h1>\n      </Link>\n      <p>User score: &#11088; {vote}</p>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n}\n\n\n","import MovieItem from \"components/MovieItem/MovieItem\";\nimport PropTypes from 'prop-types';\nimport defaultPic from 'Image/default_picture.jpg';\n\nconst MovieSet = ({ movies }) => {\n  const pathname = 'https://image.tmdb.org/t/p/w500';\n  \n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title, vote_average }) => {\n           const checkPic = poster_path\n             ? `${pathname}${poster_path}`\n             : defaultPic;\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            src={checkPic}\n            title={title}\n            vote={vote_average}\n          >\n            {title}\n          </MovieItem>\n        );\n      })}\n    </ul>\n  );\n};\n\n  MovieSet.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n      })\n    ),\n  };\n\n\nexport default MovieSet;\n\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\nconst PAGE = 1;\n\nconst getSearchMovies = async (searchMovie) => {\n  try {\n    const response = await axios.get(\n      `${URL}3/search/movie?api_key=${KEY}&query=${searchMovie}&language=${LANGUAGE}&page=${PAGE}&include_adult=false`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getSearchMovies;\n\n","import styled from \"styled-components\";\nimport {Form, Field } from 'formik';\n\nexport const FormWrap = styled(Form)`\nalign-item: center;\njustify-content: center;\n`;\n\nexport const Input = styled(Field)`\n  width: 600px;\n  padding: ${props => props.theme.space[3]}px;\n  margin-left: ${props => props.theme.space[8]}px;\n  font-size: ${props => props.theme.fontSizes[5]}px;\n  color: ${props => props.theme.colors.primary};\n  background-color: ${props => props.theme.colors.colorBtnHover};\n  border: ${props => props.theme.borders.heading};\n  font-family: 'Rubik Bubbles', cursive;\n`;\n\nexport const BtnSearch = styled.button`\n  width: ${props => props.theme.space[8]}px;\n  padding: ${props => props.theme.space[3]}px;\n  margin: ${props => props.theme.space[3]}px;\n  font-size: ${props => props.theme.fontSizes[5]}px;\n  color: ${props => props.theme.colors.primary};\n  background-color: ${props => props.theme.colors.colorBtnHover};\n  border: ${props => props.theme.borders.heading};\n  font-family: 'Rubik Bubbles', cursive;\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.colorBtnHover};\n    background-color: ${props => props.theme.colors.primary};\n    box-shadow: ${props => props.theme.shadows.boxShadow};\n  }\n`;\n\nexport const Label = styled.label`\ncolor: black\n`;\n\n","\nimport { useState, useEffect } from 'react';\nimport {useSearchParams } from 'react-router-dom';\nimport getSearchMovies from 'API/getSearchMovies';\nimport { ToastContainer, toast } from 'react-toastify';\nimport MovieSet from 'components/MoviesSet/MovieSet';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport { Formik } from 'formik';\nimport { FormWrap, Input, Label, BtnSearch } from './Movies.styled';\n\n \n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams([]);\n\n  console.log(movies);\n\n  \n  useEffect(() => {\n    if (searchParams.get('searchMovie') === null) {\n      return;\n    }\n    const searchRes = searchParams.get('searchMovie');\n    getSearchMovies(searchRes)\n      .then(response => {\n        if (response.results.length === 0) {\n          return toast.warn(\"We couldn't find result on your request.\", {\n            position: 'top-right',\n            autoClose: 3000,\n            theme: 'colored',\n          });\n        }\n        setMovies(response.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, [query, searchParams])\n\n   const handleChange = e => {\n     setQuery(e.currentTarget.value.toLowerCase());\n   };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query.trim() === '') {\n      return toast.error(\n        'Field for searching is empty. Add information for request.',\n        {\n          position: 'top-right',\n          autoClose: 3000,\n          theme: 'colored',\n        }\n      );\n    }\n    setSearchParams({ searchMovie:query });\n    setQuery('');\n  };\n\n\n  return (\n    <div>\n      <ToastContainer />\n      <Formik>\n        <FormWrap onSubmit={handleSubmit}>\n          <Label>\n            <Input\n              type=\"text\"\n              placeholder=\"Search your favorite movie\"\n              name=\"searchMovie\"\n              value={query}\n              onChange={handleChange}\n            ></Input>\n          </Label>\n          <BtnSearch type=\"submit\">Search</BtnSearch>\n        </FormWrap>\n      </Formik>\n      <MovieSet movies={movies} />\n    </div>\n  );\n      }\n\nexport default Movies;\n\n Movies.propTypes = {\n   movies: PropTypes.arrayOf(PropTypes.shape({})),\n };\n"],"names":["id","src","title","vote","location","useLocation","to","state","from","alt","width","movies","map","poster_path","vote_average","checkPic","defaultPic","getSearchMovies","searchMovie","axios","response","data","console","log","FormWrap","styled","Form","Input","Field","props","theme","space","fontSizes","colors","primary","colorBtnHover","borders","heading","BtnSearch","shadows","boxShadow","Label","Movies","useState","setMovies","query","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","searchRes","then","results","length","toast","position","autoClose","catch","error","onSubmit","e","preventDefault","trim","type","placeholder","name","value","onChange","currentTarget","toLowerCase","MovieSet"],"sourceRoot":""}