{"version":3,"file":"static/js/774.c5218057.chunk.js","mappings":"wMAiBA,EAdkB,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,GAAIC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAClCC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAaH,MAAOA,EAApB,WACE,UAAC,KAAD,CAAMI,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKK,IAAKR,EAAUS,IAAKR,EAAOS,MAAM,SACtC,wBAAKT,QAEP,+CAAyBC,OALlBH,EAQZ,ECyBD,EArCiB,SAAC,GAAgB,IAAdY,EAAa,EAAbA,OAKlB,OACE,wBACGA,EAAOC,KAAI,YAA+C,IAA5Cb,EAA2C,EAA3CA,GAAIc,EAAuC,EAAvCA,YAAaZ,EAA0B,EAA1BA,MAAOa,EAAmB,EAAnBA,aAC/Bd,EACY,OAAhBa,EAAA,UANW,mCAMX,OAAqCA,GAP1B,8BAQb,OACE,SAAC,EAAD,CAEEd,GAAIA,EACJS,IAAKR,EACLC,MAAOA,EACPC,KAAMY,EALR,SAOGb,GANIF,EASV,KAGN,C,mICpBKgB,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAPf,8BAOe,wCANf,mCAMe,qBALV,QAKU,iBAJd,IAEY,cAEfC,EAFe,yBAKdA,EAASC,MALK,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWtB,I,uCCuBA,EA/Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRR,IACGS,MAAK,SAAAP,GACJ,GAAgC,IAA5BA,EAASQ,QAAQC,OACnB,OAAOC,EAAAA,GAAAA,KAAW,2CAA4C,CAC5DC,SAAU,YACVC,UAAW,IACXC,MAAO,YAGXR,EAAUL,EAASQ,QACpB,IACAM,OAAM,SAAAC,GACLb,QAAQC,IAAIY,EACb,GACJ,GAAE,IAEHb,QAAQC,IAAIT,IAGV,6BACE,SAAC,KAAD,KACA,6CACA,SAACsB,EAAA,EAAD,CAAUtB,OAAQA,MAGvB,C","sources":["components/MovieItem/MovieItem.jsx","components/MoviesSet/MovieSet.jsx","API/getMovieTranding.js","pages/Home/Home.jsx"],"sourcesContent":["import { useLocation, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\nconst MovieItem = ({ id, checkPic, title, vote }) => {\n  const location = useLocation();\n\n  return (\n    <li key={id} title={title}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={checkPic} alt={title} width=\"200\" />\n        <h1>{title}</h1>\n      </Link>\n      <p>User score: &#11088; {vote}</p>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n}\n\n\n","import MovieItem from \"components/MovieItem/MovieItem\";\nimport PropTypes from 'prop-types';\n\nconst MovieSet = ({ movies }) => {\n\n  const defaultPic = './Image/default_picture.jpg';\n    const pathname = 'https://image.tmdb.org/t/p/w500';\n  \n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title, vote_average }) => {\n        const checkPic =\n          poster_path !== null ? `${pathname}${poster_path}` : defaultPic;\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            src={checkPic}\n            title={title}\n            vote={vote_average}\n          >\n            {title}\n          </MovieItem>\n        );\n      })}\n    </ul>\n  );\n};\n\n  MovieSet.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n      })\n    ),\n  };\n\n\nexport default MovieSet;\n\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\nconst PAGE = 1;\n\nconst getMovieTranding = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}3/trending/movie/day?api_key=${KEY}&language=${LANGUAGE}&page=${PAGE}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMovieTranding;\n","\nimport { useState, useEffect } from \"react\";\nimport getMovieTranding from \"API/getMovieTranding\";\nimport MovieSet from 'components/MoviesSet/MovieSet';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\n \n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovieTranding()\n      .then(response => {\n        if (response.results.length === 0) {\n          return toast.warn(\"We couldn't find result on your request.\", {\n            position: 'top-right',\n            autoClose: 3000,\n            theme: 'colored',\n          });\n        }\n        setMovies(response.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  console.log(movies)\n\n  return (\n    <main>\n      <ToastContainer />\n      <div>Trending today</div>\n      <MovieSet movies={movies} />\n    </main>\n  );\n}\n\nexport default Home;\n\n  Home.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({})\n    ),\n  };\n"],"names":["id","checkPic","title","vote","location","useLocation","to","state","from","src","alt","width","movies","map","poster_path","vote_average","getMovieTranding","axios","response","data","console","log","useState","setMovies","useEffect","then","results","length","toast","position","autoClose","theme","catch","error","MovieSet"],"sourceRoot":""}