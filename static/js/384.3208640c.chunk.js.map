{"version":3,"file":"static/js/384.3208640c.chunk.js","mappings":"qPAKMA,EAAgB,mCAAG,WAAMC,GAAN,gGAEEC,EAAAA,EAAAA,IAAA,UALf,8BAKe,mBAA2BD,EAA3B,oBAJf,qCAEa,cAEfE,EAFe,yBAGdA,EAASC,MAHK,gCAKrBC,QAAQC,IAAR,MALqB,yDAAH,sDAStB,I,kBCmDA,EAtDqB,WACnB,IAAQL,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAA0BO,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAWjB,IARAC,EAAAA,EAAAA,YAAU,WACRf,EAAiBC,GACde,KAAKN,GACLO,OAAM,SAAAC,GACLb,QAAQC,IAAIY,EACb,GACJ,GAAE,CAACjB,KAECQ,EACH,OAAO,KAGT,IAGQU,EAAuDV,EAAvDU,MAAOC,EAAgDX,EAAhDW,aAAcC,EAAkCZ,EAAlCY,SAAUC,EAAwBb,EAAxBa,OAAQC,EAAgBd,EAAhBc,YACzCC,EAAOC,KAAKC,MAAMN,GAClBO,EAAWL,EAAOM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,MAGtD,OACE,4BACE,0BACE,mBAAQC,KAAK,SAASC,QAXN,WAAO,IAAD,IAC1BtB,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAUqB,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,IACnC,EASK,wBAIF,0BACE,gBAAKC,IA9BM,kCA8BUb,EAAac,IAAI,aAExC,wBAAKlB,KACL,kCAAUK,MACV,uBAAIH,KACJ,uBAAIM,KACJ,2BACE,yBACE,SAAC,KAAD,CAASW,GAAG,OAAZ,qBAEF,yBACE,SAAC,KAAD,CAASA,GAAG,UAAZ,2BAGJ,SAAC,KAAD,MAGL,C","sources":["API/getMoviesDetails.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\n\nconst getMoviesDetails = async id => {\n  try {\n    const response = await axios.get(`${URL}3/movie/${id}?api_key=${KEY}`);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMoviesDetails;\n","import {\n  NavLink,\n  Outlet,\n  useParams,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport getMoviesDetails from 'API/getMoviesDetails';\nimport { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const pathname = 'https://image.tmdb.org/t/p/w500';\n\n  useEffect(() => {\n    getMoviesDetails(id)\n      .then(setMovie)\n      .catch(error => {\n        console.log(error);\n      });\n  }, [id]);\n\n  if (!movie) {\n    return null;\n  }\n\n  const onGoBackClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n  const { title, vote_average, overview, genres, poster_path } = movie;\n  const vote = Math.round(vote_average);\n  const genreSet = genres.map(ganre => ganre.name).join(', ');\n  \n\n  return (\n    <div>\n      <div>\n        <button type=\"button\" onClick={onGoBackClick}>\n          GO BACK\n        </button>\n      </div>\n      <div>\n        <img src={pathname + poster_path} alt=\"movie\" />\n      </div>\n      <h1>{title}</h1>\n      <p>vote: {vote}</p>\n      <p>{overview}</p>\n      <p>{genreSet}</p>\n      <ul>\n        <li>\n          <NavLink to=\"cast\">CAST</NavLink>\n        </li>\n        <li>\n          <NavLink to=\"rewievs\">REWIEVS</NavLink>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n};\n\nexport default MovieDetails;\n\n MovieDetails.propTypes = {\n   movie: PropTypes.arrayOf(\n     PropTypes.shape({\n       id: PropTypes.number.isRequired,\n       title: PropTypes.string.isRequired,\n       vote: PropTypes.string.isRequired,\n       overview: PropTypes.string.isRequired,\n       genreSet: PropTypes.string.isRequired,\n     })\n   ),\n };\n\n\n    \n\n\n"],"names":["getMoviesDetails","id","axios","response","data","console","log","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","then","catch","error","title","vote_average","overview","genres","poster_path","vote","Math","round","genreSet","map","ganre","name","join","type","onClick","state","from","src","alt","to"],"sourceRoot":""}