{"version":3,"file":"static/js/519.9147d9e9.chunk.js","mappings":"oOAOMA,EAAe,mCAAG,WAAMC,GAAN,gGAEGC,EAAAA,EAAAA,IAAA,UAPf,8BAOe,mBACJD,EADI,4BANf,mCAMe,qBALV,QAKU,iBAJd,IAEW,cAEdE,EAFc,yBAKbA,EAASC,MALI,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWrB,I,2BC2BA,EApCe,WACN,IAAQL,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAA6BO,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXCC,EAAAA,EAAAA,YAAU,WACRX,EAAgBC,GACbW,MAAK,SAAAT,GACJO,EAAUP,EAASU,QACpB,IAAEC,OAAM,SAAAC,GACPV,QAAQC,IAAIS,EACb,GACJ,GAAE,CAACd,IAELI,QAAQC,IAAIG,GAERA,GAGJ,4BACE,oCACA,yBACGA,EAAQO,KAAI,YAA8B,IAA3Bf,EAA0B,EAA1BA,GAAIgB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,0BACE,2BACE,wBAAKD,KACL,wBAAKC,QAHCjB,EAOb,UAfgB,0DAmBxB,C","sources":["API/getMovieReviews.js","components/Rewievs/Rewievs.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\nconst PAGE = 1;\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=${LANGUAGE}&page=${PAGE}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMovieReviews;\n","\nimport getMovieReviews from \"API/getMovieReviews\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n     \n\nconst Review = () => {\n         const { id } = useParams();\n         const [reviews, setReview] = useState([])\n         \n          useEffect(() => {\n            getMovieReviews(id)\n              .then(response => {\n                setReview(response.results);\n              }).catch(error => {\n                console.log(error);\n              })\n          }, [id]);\n\n         console.log(reviews);\n\n         if(!reviews){return (<p>Sorry, we don't have any review</p>)}\n         \n       return (\n         <div>\n           <p>REVIEWS</p>\n           <div>\n             {reviews.map(({ id, author, content }) => {\n               return (\n                 <div key={id}>\n                   <ul>\n                     <li>{author}</li>\n                     <li>{content}</li>\n                   </ul>\n                 </div>\n               );\n             })}\n           </div>\n         </div>\n       );\n     };\n\nexport default Review;\n     \n    Review.propTypes = {\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          author: PropTypes.string.isRequired,\n          content: PropTypes.string.isRequired,\n        })\n      ),\n    };\n"],"names":["getMovieReviews","id","axios","response","data","console","log","useParams","useState","reviews","setReview","useEffect","then","results","catch","error","map","author","content"],"sourceRoot":""}