{"version":3,"file":"static/js/613.2d36cf79.chunk.js","mappings":"wMAkBA,EAdkB,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,GAAIC,EAAuB,EAAvBA,IAAKC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KAC7BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gBAAaH,MAAOA,EAApB,WACE,UAAC,KAAD,CAAMI,GAAE,kBAAaN,GAAMO,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBAAKH,IAAKA,EAAKQ,IAAKP,EAAOQ,MAAM,SACjC,wBAAKR,QAEP,+CAAyBC,OALlBH,EAQZ,E,UCwBD,EApCiB,SAAC,GAAgB,IAAdW,EAAa,EAAbA,OAGlB,OACE,wBACGA,EAAOC,KAAI,YAA+C,IAA5CZ,EAA2C,EAA3CA,GAAIa,EAAuC,EAAvCA,YAAaX,EAA0B,EAA1BA,MAAOY,EAAmB,EAAnBA,aAC5BC,EAAWF,EAAW,UALpB,mCAKoB,OACVA,GACdG,EACP,OACE,SAAC,EAAD,CAEEhB,GAAIA,EACJC,IAAKc,EACLb,MAAOA,EACPC,KAAMW,EALR,SAOGZ,GANIF,EASV,KAGN,C,qICpBKiB,EAAgB,mCAAG,6GAEEC,EAAAA,EAAAA,IAAA,UAPf,8BAOe,wCANf,mCAMe,qBALV,QAKU,iBAJd,IAEY,cAEfC,EAFe,yBAKdA,EAASC,MALK,gCAOrBC,QAAQC,IAAR,MAPqB,yDAAH,qDAWtB,I,uCChBaC,E,QAAWC,GAAAA,IAAH,kDACC,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,UAAvB,I,SCyC3B,EAjCa,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOlB,EAAP,KAAemB,EAAf,KAqBA,OAnBAC,EAAAA,EAAAA,YAAU,WACRd,IACGe,MAAK,SAAAb,GACJ,GAAgC,IAA5BA,EAASc,QAAQC,OACnB,OAAOC,EAAAA,GAAAA,KAAW,2CAA4C,CAC5DC,SAAU,YACVC,UAAW,IACXX,MAAO,YAGXI,EAAUX,EAASc,QACpB,IACAK,OAAM,SAAAC,GACLlB,QAAQC,IAAIiB,EACb,GACJ,GAAE,IAEHlB,QAAQC,IAAIX,IAGV,2BACE,UAACY,EAAD,YACE,SAAC,KAAD,KACA,6CACA,SAACiB,EAAA,EAAD,CAAU7B,OAAQA,QAIzB,C","sources":["components/MovieItem/MovieItem.jsx","components/MoviesSet/MovieSet.jsx","API/getMovieTranding.js","pages/Home/Home.styled.js","pages/Home/Home.jsx"],"sourcesContent":["import { useLocation, Link } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n\nconst MovieItem = ({ id, src, title, vote }) => {\n  const location = useLocation();\n\n  return (\n    <li key={id} title={title}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img src={src} alt={title} width=\"200\" />\n        <h1>{title}</h1>\n      </Link>\n      <p>User score: &#11088; {vote}</p>\n    </li>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  vote: PropTypes.number.isRequired,\n}\n\n\n","import MovieItem from \"components/MovieItem/MovieItem\";\nimport PropTypes from 'prop-types';\nimport defaultPic from 'Image/default_picture.jpg';\n\nconst MovieSet = ({ movies }) => {\n  const pathname = 'https://image.tmdb.org/t/p/w500';\n  \n  return (\n    <ul>\n      {movies.map(({ id, poster_path, title, vote_average }) => {\n           const checkPic = poster_path\n             ? `${pathname}${poster_path}`\n             : defaultPic;\n        return (\n          <MovieItem\n            key={id}\n            id={id}\n            src={checkPic}\n            title={title}\n            vote={vote_average}\n          >\n            {title}\n          </MovieItem>\n        );\n      })}\n    </ul>\n  );\n};\n\n  MovieSet.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        title: PropTypes.string.isRequired,\n        vote_average: PropTypes.number.isRequired,\n      })\n    ),\n  };\n\n\nexport default MovieSet;\n\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\nconst PAGE = 1;\n\nconst getMovieTranding = async () => {\n  try {\n    const response = await axios.get(\n      `${URL}3/trending/movie/day?api_key=${KEY}&language=${LANGUAGE}&page=${PAGE}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMovieTranding;\n","import styled from \"styled-components\";\n\nexport const HomePage = styled.div`\n  background-color: ${props => props.theme.colors.background};\n`;","\nimport { useState, useEffect } from \"react\";\nimport getMovieTranding from \"API/getMovieTranding\";\nimport MovieSet from 'components/MoviesSet/MovieSet';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\nimport { HomePage } from \"./Home.styled\";\n\n \n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getMovieTranding()\n      .then(response => {\n        if (response.results.length === 0) {\n          return toast.warn(\"We couldn't find result on your request.\", {\n            position: 'top-right',\n            autoClose: 3000,\n            theme: 'colored',\n          });\n        }\n        setMovies(response.results);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  console.log(movies)\n\n  return (\n    <main>\n      <HomePage>\n        <ToastContainer />\n        <div>Trending today</div>\n        <MovieSet movies={movies} />\n      </HomePage>\n    </main>\n  );\n}\n\nexport default Home;\n\n  Home.propTypes = {\n    movies: PropTypes.arrayOf(\n      PropTypes.shape({})\n    ),\n  };\n"],"names":["id","src","title","vote","location","useLocation","to","state","from","alt","width","movies","map","poster_path","vote_average","checkPic","defaultPic","getMovieTranding","axios","response","data","console","log","HomePage","styled","props","theme","colors","background","useState","setMovies","useEffect","then","results","length","toast","position","autoClose","catch","error","MovieSet"],"sourceRoot":""}