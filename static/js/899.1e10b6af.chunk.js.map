{"version":3,"file":"static/js/899.1e10b6af.chunk.js","mappings":"oOAOMA,EAAe,mCAAG,WAAMC,GAAN,gGAEGC,EAAAA,EAAAA,IAAA,UAPf,8BAOe,mBACJD,EADI,4BANf,mCAMe,qBALV,UAGO,cAEdE,EAFc,yBAKbA,EAASC,MALI,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWrB,I,2BC4BK,EArCQ,WACJ,IAAQL,GAAOM,EAAAA,EAAAA,MAAPN,GACR,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAeA,OAZCC,EAAAA,EAAAA,YAAU,WACRX,EAAgBC,GACbW,MAAK,SAAAT,GACJO,EAAQP,EAASM,KAClB,IACAI,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,EACb,GACJ,GAAE,CAACb,IAELI,QAAQC,IAAIG,GAERA,GAGJ,4BACE,mCACA,wBACGA,EAAKM,KAAI,YAA2C,IAAxCd,EAAuC,EAAvCA,GAAIe,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAC/B,OACE,2BACE,wBAAKF,KACL,uBAAIC,KACJ,gBAAKE,IAzBE,kCAyBcD,EAAcE,IAAI,YAHhCnB,EAMZ,UAda,gEAkBrB,C","sources":["API/getMovieCredits.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\n\n\nconst getMovieCredits = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}3/movie/${id}/credits?api_key=${KEY}&language=${LANGUAGE}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMovieCredits;\n","\nimport getMovieCredits from \"API/getMovieCredits\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\n\n     \n\nconst Cast = () => {\n         const { id } = useParams();\n         const [cast, setCast] = useState([])\n         const pathname = 'https://image.tmdb.org/t/p/w500';\n         \n          useEffect(() => {\n            getMovieCredits(id)\n              .then(response => {\n                setCast(response.cast);\n              })\n              .catch(error => {\n                console.log(error);\n              });\n          }, [id]);\n\n         console.log(cast);\n\n         if(!cast){return (<p>Sorry, we don't have any informations</p>)}\n         \n       return (\n         <div>\n           <p>ACTORS</p>\n           <ul>\n             {cast.map(({ id, caracter, name, profile_path }) => {\n               return (\n                 <li key={id}>\n                   <h2>{caracter}</h2>\n                   <p>{name}</p>\n                   <img src={pathname + profile_path} alt=\"actor\" />\n                 </li>\n               );\n             })}\n           </ul>\n         </div>\n       );\n     };\n\n     export default Cast;\n\n     Cast.propTypes = {\n       cast: PropTypes.arrayOf(\n         PropTypes.shape({\n           id: PropTypes.number.isRequired,\n           caracter: PropTypes.string.isRequired,\n           name: PropTypes.string.isRequired,\n           profile_path: PropTypes.string.isRequired,\n         })\n       ),\n     };\n\n "],"names":["getMovieCredits","id","axios","response","data","console","log","useParams","useState","cast","setCast","useEffect","then","catch","error","map","caracter","name","profile_path","src","alt"],"sourceRoot":""}