{"version":3,"file":"static/js/593.595e3427.chunk.js","mappings":"+OAOMA,EAAe,mCAAG,WAAMC,GAAN,gGAEGC,EAAAA,EAAAA,IAAA,UAPf,8BAOe,mBACJD,EADI,4BANf,mCAMe,qBALV,QAKU,iBAJd,IAEW,cAEdE,EAFc,yBAKbA,EAASC,MALI,gCAOpBC,QAAQC,IAAR,MAPoB,yDAAH,sDAWrB,I,uCChBaC,EAAgBC,EAAAA,GAAAA,GAAH,uRAIf,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,OAAvB,IACE,SAAAH,GAAK,OAAIA,EAAMC,MAAMG,MAAM,EAAtB,IACJ,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,MAAM,EAAtB,IAET,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,UAAU,EAA1B,IAOPC,EAAiBP,EAAAA,GAAAA,GAAH,kWAIT,SAAAC,GAAK,OAAIA,EAAMC,MAAMG,MAAM,EAAtB,IACJ,SAAAJ,GAAK,OAAIA,EAAMC,MAAMG,MAAM,EAAtB,IAET,SAAAJ,GAAK,OAAIA,EAAMC,MAAMI,UAAU,EAA1B,IAQF,SAAAL,GAAK,OAAIA,EAAMC,MAAMM,QAAQC,SAAxB,IAIVC,EAAcV,EAAAA,GAAAA,GAAH,4B,SCcxB,EApCe,WACN,IAAQP,GAAOkB,EAAAA,EAAAA,MAAPlB,GACf,GAA6BmB,EAAAA,EAAAA,UAAS,IAAtC,eAAOC,EAAP,KAAgBC,EAAhB,KAcO,OAXCC,EAAAA,EAAAA,YAAU,WACRvB,EAAgBC,GACbuB,MAAK,SAAArB,GACJmB,EAAUnB,EAASsB,QACpB,IAAEC,OAAM,SAAAC,GACPtB,QAAQC,IAAIqB,EACb,GACJ,GAAE,CAAC1B,IAELI,QAAQC,IAAIe,GAERA,GAGJ,0BACE,yBACGA,EAAQO,KAAI,YAA8B,IAA3B3B,EAA0B,EAA1BA,GAAI4B,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC1B,OACE,0BACE,UAACZ,EAAD,YACE,SAACX,EAAD,UAAgBsB,KAChB,SAACd,EAAD,UAAiBe,QAHX7B,EAOb,SAdgB,0DAkBxB,C,sBChDS,SAAS8B,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHK,MAAOH,OAAOC,OAAOH,MAG3B,C","sources":["API/getMovieReviews.js","components/Rewievs/Rewievs.styled.js","components/Rewievs/Rewievs.jsx","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/';\nconst KEY = 'd912e4e6ac5ac1e34c6318ab6e2c9716';\nconst LANGUAGE = 'en-US';\nconst PAGE = 1;\n\nconst getMovieReviews = async id => {\n  try {\n    const response = await axios.get(\n      `${URL}3/movie/${id}/reviews?api_key=${KEY}&language=${LANGUAGE}&page=${PAGE}`\n    );\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default getMovieReviews;\n","import styled from \"styled-components\";\n\nexport const RewievsAuthor = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  color: ${props => props.theme.colors.primary};\n  margin-right: ${props => props.theme.space[4]}px;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  font-family: 'Sevillana', cursive;\n  font-size: ${props => props.theme.fontSizes[6]}px;\n  object-fit: cover;\n  width: 100%;\n  text-align: center;\n  }\n`;\n\nexport const RewievsContent = styled.li`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  margin-right: ${props => props.theme.space[4]}px;\n  margin-bottom: ${props => props.theme.space[4]}px;\n  font-family: 'Montserrat', sans-serif;\n  font-size: ${props => props.theme.fontSizes[3]}px;\n  line-height: 1.5;\n  object-fit: cover;\n  width: 100%;\n\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n    box-shadow: ${props => props.theme.shadows.boxShadow};\n  }\n`;\n\nexport const RewievsCard = styled.ul`\n  \n`;","\nimport getMovieReviews from \"API/getMovieReviews\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport {\n  RewievsAuthor,\n  RewievsContent,\n  RewievsCard,\n} from './Rewievs.styled';\n\n     \n\nconst Review = () => {\n         const { id } = useParams();\n  const [reviews, setReview] = useState([])\n\n         \n          useEffect(() => {\n            getMovieReviews(id)\n              .then(response => {\n                setReview(response.results);\n              }).catch(error => {\n                console.log(error);\n              })\n          }, [id]);\n\n         console.log(reviews);\n\n         if(!reviews){return (<p>Sorry, we don't have any review</p>)}\n         \n       return (\n         <div>\n           <div>\n             {reviews.map(({ id, author, content }) => {\n               return (\n                 <div key={id}>\n                   <RewievsCard>\n                     <RewievsAuthor>{author}</RewievsAuthor>\n                     <RewievsContent>{content}</RewievsContent>\n                   </RewievsCard>\n                 </div>\n               );\n             })}\n           </div>\n         </div>\n       );\n     };\n\nexport default Review;\n     \n    Review.propTypes = {\n      reviews: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          author: PropTypes.string.isRequired,\n          content: PropTypes.string.isRequired,\n        })\n      ),\n    };\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["getMovieReviews","id","axios","response","data","console","log","RewievsAuthor","styled","props","theme","colors","primary","space","fontSizes","RewievsContent","shadows","boxShadow","RewievsCard","useParams","useState","reviews","setReview","useEffect","then","results","catch","error","map","author","content","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}